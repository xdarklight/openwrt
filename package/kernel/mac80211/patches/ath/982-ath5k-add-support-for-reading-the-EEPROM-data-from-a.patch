From 2b73738a07edff13e8e6e6a3f37e48c867962702 Mon Sep 17 00:00:00 2001
From: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date: Mon, 8 Jun 2020 00:26:04 +0200
Subject: [PATCH 1/3] ath5k: add support for reading the EEPROM data from an
 nvmem-cell

Some devices supported by OpenWrt don't have an EEPROM connected to the
ath5k chip itself. Instead the EEPROM data for the wifi chip is stored
on a read-only partition of the main flash storage of these devices. Add
support for reading the EEPROM data through the NVMEM framework on these
boards (when configured via device-tree).

Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
---
 drivers/net/wireless/ath/ath5k/ath5k.h  |  9 +++------
 drivers/net/wireless/ath/ath5k/eeprom.c | 22 ++++++++++++++++++++++
 2 files changed, 25 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath5k/ath5k.h
+++ b/drivers/net/wireless/ath/ath5k/ath5k.h
@@ -1448,6 +1448,8 @@ struct ath5k_hw {
 	/* Calibration mask */
 	u8			ah_cal_mask;
 
+	bool			use_nvmem_eeprom;
+
 	/*
 	 * Function pointers
 	 */
@@ -1530,6 +1532,7 @@ int ath5k_eeprom_init(struct ath5k_hw *a
 void ath5k_eeprom_detach(struct ath5k_hw *ah);
 int ath5k_eeprom_mode_from_channel(struct ath5k_hw *ah,
 		struct ieee80211_channel *channel);
+bool ath5k_hw_nvram_read(struct ath5k_hw *ah, u32 off, u16 *data);
 
 /* Protocol Control Unit Functions */
 /* Helpers */
@@ -1698,12 +1701,6 @@ static inline void ath5k_read_cachesize(
 	common->bus_ops->read_cachesize(common, csz);
 }
 
-static inline bool ath5k_hw_nvram_read(struct ath5k_hw *ah, u32 off, u16 *data)
-{
-	struct ath_common *common = ath5k_hw_common(ah);
-	return common->bus_ops->eeprom_read(common, off, data);
-}
-
 static inline u32 ath5k_hw_bitswap(u32 val, unsigned int bits)
 {
 	u32 retval = 0, bit, i;
--- a/drivers/net/wireless/ath/ath5k/eeprom.c
+++ b/drivers/net/wireless/ath/ath5k/eeprom.c
@@ -23,6 +23,8 @@
 
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
 
+#include <linux/nvmem-consumer.h>
+#include <linux/property.h>
 #include <linux/slab.h>
 
 #include "ath5k.h"
@@ -1744,8 +1746,17 @@ ath5k_eeprom_read_spur_chans(struct ath5
 int
 ath5k_eeprom_init(struct ath5k_hw *ah)
 {
+	struct nvmem_cell *eeprom_nvmem_cell;
 	int err;
 
+	if (device_property_read_bool(ah->dev, "qca,no-eeprom")) {
+		eeprom_nvmem_cell = devm_nvmem_cell_get(ah->dev, "eeprom");
+		if (IS_ERR(eeprom_nvmem_cell))
+			return PTR_ERR(eeprom_nvmem_cell);
+
+		ah->use_nvmem_eeprom = true;
+	}
+
 	err = ath5k_eeprom_init_header(ah);
 	if (err < 0)
 		return err;
@@ -1794,3 +1805,14 @@ ath5k_eeprom_mode_from_channel(struct at
 		return AR5K_EEPROM_MODE_11A;
 	}
 }
+
+bool
+ath5k_hw_nvram_read(struct ath5k_hw *ah, u32 off, u16 *data)
+{
+	struct ath_common *common = ath5k_hw_common(ah);
+
+	if (ah->use_nvmem_eeprom)
+		return !nvmem_cell_read_u16(ah->dev, "eeprom", data);
+
+	return common->bus_ops->eeprom_read(common, off, data);
+}
